version: "3.8"

services:
  # Nginx Gateway
  nginx:
    image: nginx:latest
    container_name: ecommerce-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
      - product-service
      - frontend
    networks:
      - Ecommerce-Project-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: Ecommerce-Project-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: NodeJS_midterm_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - Ecommerce-Project-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: Ecommerce-Project-user-service
    restart: always
    environment:
      DB_HOST: mysql
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: NodeJS_midterm_db
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      SERVICE_PORT: 3001
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - Ecommerce-Project-network

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: Ecommerce-Project-product-service
    restart: always
    environment:
      - SERVICE_PORT=3002
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=NodeJS_midterm_db
      - USER_SERVICE_URL=http://user-service:3001
    volumes:
      - ./services/product-service/public/uploads:/app/public/uploads
    depends_on:
      - mysql
      - user-service
    networks:
      - Ecommerce-Project-network

  # Cart Service
  cart-service:
    build:
      context: ./services/cart-service
      dockerfile: Dockerfile
    container_name: Ecommerce-Project-cart-service
    restart: always
    environment:
      - SERVICE_PORT=3003
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=NodeJS_midterm_db
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - FRONTEND_URL=http://frontend:80
    depends_on:
      - mysql
      - product-service
    networks:
      - Ecommerce-Project-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: Ecommerce-Project-frontend
    restart: always
    environment:
      - REACT_APP_API_URL=/api # Use relative URL for API calls
    networks:
      - Ecommerce-Project-network

networks:
  Ecommerce-Project-network:
    driver: bridge

volumes:
  mysql_data:
