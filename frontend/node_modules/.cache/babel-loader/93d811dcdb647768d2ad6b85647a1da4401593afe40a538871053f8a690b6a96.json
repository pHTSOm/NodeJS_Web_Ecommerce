{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalAmount: 0,\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      console.log(\"Before URL fix - Item being added to cart:\", newItem);\n      if (newItem.imgUrl && !newItem.imgUrl.startsWith('http')) {\n        newItem.imgUrl = `http://localhost:5000${newItem.imgUrl}`;\n        console.log(\"After URL fix - Updated image URL:\", newItem.imgUrl);\n      }\n      const existingItemIndex = state.cartItems.findIndex(item => item.id === newItem.id);\n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        state.cartItems[existingItemIndex].quantity += 1;\n      } else {\n        // Item doesn't exist, add new item with quantity 1\n        newItem.quantity = 1;\n        state.cartItems.push(newItem);\n      }\n\n      // Update totals\n      state.totalQuantity++;\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n    deleteItem: (state, action) => {\n      const id = action.payload;\n      const existingItemIndex = state.cartItems.findIndex(item => item.id === id);\n      if (existingItemIndex >= 0) {\n        const itemToDelete = state.cartItems[existingItemIndex];\n\n        // Subtract the price and quantity of this item\n        state.totalQuantity -= itemToDelete.quantity;\n        state.totalAmount -= itemToDelete.price * itemToDelete.quantity;\n\n        // Remove the item from the cart\n        state.cartItems.splice(existingItemIndex, 1);\n      }\n    },\n    // Add quantity controls \n    incrementQuantity: (state, action) => {\n      const id = action.payload;\n      const item = state.cartItems.find(item => item.id === id);\n      if (item) {\n        item.quantity++;\n        state.totalQuantity++;\n        state.totalAmount += Number(item.price);\n      }\n    },\n    decrementQuantity: (state, action) => {\n      const id = action.payload;\n      const item = state.cartItems.find(item => item.id === id);\n      if (item && item.quantity > 1) {\n        item.quantity--;\n        state.totalQuantity--;\n        state.totalAmount -= Number(item.price);\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalAmount","totalQuantity","cartSlice","name","reducers","addItem","state","action","newItem","payload","console","log","imgUrl","startsWith","existingItemIndex","findIndex","item","id","quantity","push","reduce","total","Number","price","deleteItem","itemToDelete","splice","incrementQuantity","find","decrementQuantity","cartActions","actions","reducer"],"sources":["/Users/truongphat/Desktop/WebProgramming/midterm_web/frontend/src/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cartItems: [],\n  totalAmount: 0,\n  totalQuantity: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      console.log(\"Before URL fix - Item being added to cart:\", newItem);\n      if (newItem.imgUrl && !newItem.imgUrl.startsWith('http')) {\n        newItem.imgUrl = `http://localhost:5000${newItem.imgUrl}`;\n        console.log(\"After URL fix - Updated image URL:\", newItem.imgUrl);\n      }\n\n      const existingItemIndex = state.cartItems.findIndex(\n        (item) => item.id === newItem.id\n      );\n      \n\n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        state.cartItems[existingItemIndex].quantity += 1;\n      } else {\n        // Item doesn't exist, add new item with quantity 1\n        newItem.quantity = 1;\n        state.cartItems.push(newItem);\n      }\n      \n      // Update totals\n      state.totalQuantity++;\n      state.totalAmount = state.cartItems.reduce(\n        (total, item) => total + Number(item.price) * Number(item.quantity),\n        0\n      );\n    },\n    deleteItem: (state, action) => {\n      const id = action.payload;\n      const existingItemIndex = state.cartItems.findIndex(\n        (item) => item.id === id\n      );\n      \n      if (existingItemIndex >= 0) {\n        const itemToDelete = state.cartItems[existingItemIndex];\n        \n        // Subtract the price and quantity of this item\n        state.totalQuantity -= itemToDelete.quantity;\n        state.totalAmount -= itemToDelete.price * itemToDelete.quantity;\n        \n        // Remove the item from the cart\n        state.cartItems.splice(existingItemIndex, 1);\n      }\n    },\n\n    // Add quantity controls \n    incrementQuantity: (state, action) => {\n      const id = action.payload;\n      const item = state.cartItems.find(item => item.id === id);\n      if (item) {\n        item.quantity++;\n        state.totalQuantity++;\n        state.totalAmount += Number(item.price);\n      }\n    },\n    \n    decrementQuantity: (state, action) => {\n      const id = action.payload;\n      const item = state.cartItems.find(item => item.id === id);\n      if (item && item.quantity > 1) {\n        item.quantity--;\n        state.totalQuantity--;\n        state.totalAmount -= Number(item.price);\n      }\n    }\n  }\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEH,OAAO,CAAC;MAClE,IAAIA,OAAO,CAACI,MAAM,IAAI,CAACJ,OAAO,CAACI,MAAM,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;QACxDL,OAAO,CAACI,MAAM,GAAG,wBAAwBJ,OAAO,CAACI,MAAM,EAAE;QACzDF,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEH,OAAO,CAACI,MAAM,CAAC;MACnE;MAEA,MAAME,iBAAiB,GAAGR,KAAK,CAACP,SAAS,CAACgB,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKT,OAAO,CAACS,EAChC,CAAC;MAGD,IAAIH,iBAAiB,IAAI,CAAC,EAAE;QAC1B;QACAR,KAAK,CAACP,SAAS,CAACe,iBAAiB,CAAC,CAACI,QAAQ,IAAI,CAAC;MAClD,CAAC,MAAM;QACL;QACAV,OAAO,CAACU,QAAQ,GAAG,CAAC;QACpBZ,KAAK,CAACP,SAAS,CAACoB,IAAI,CAACX,OAAO,CAAC;MAC/B;;MAEA;MACAF,KAAK,CAACL,aAAa,EAAE;MACrBK,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACP,SAAS,CAACqB,MAAM,CACxC,CAACC,KAAK,EAAEL,IAAI,KAAKK,KAAK,GAAGC,MAAM,CAACN,IAAI,CAACO,KAAK,CAAC,GAAGD,MAAM,CAACN,IAAI,CAACE,QAAQ,CAAC,EACnE,CACF,CAAC;IACH,CAAC;IACDM,UAAU,EAAEA,CAAClB,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMU,EAAE,GAAGV,MAAM,CAACE,OAAO;MACzB,MAAMK,iBAAiB,GAAGR,KAAK,CAACP,SAAS,CAACgB,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EACxB,CAAC;MAED,IAAIH,iBAAiB,IAAI,CAAC,EAAE;QAC1B,MAAMW,YAAY,GAAGnB,KAAK,CAACP,SAAS,CAACe,iBAAiB,CAAC;;QAEvD;QACAR,KAAK,CAACL,aAAa,IAAIwB,YAAY,CAACP,QAAQ;QAC5CZ,KAAK,CAACN,WAAW,IAAIyB,YAAY,CAACF,KAAK,GAAGE,YAAY,CAACP,QAAQ;;QAE/D;QACAZ,KAAK,CAACP,SAAS,CAAC2B,MAAM,CAACZ,iBAAiB,EAAE,CAAC,CAAC;MAC9C;IACF,CAAC;IAED;IACAa,iBAAiB,EAAEA,CAACrB,KAAK,EAAEC,MAAM,KAAK;MACpC,MAAMU,EAAE,GAAGV,MAAM,CAACE,OAAO;MACzB,MAAMO,IAAI,GAAGV,KAAK,CAACP,SAAS,CAAC6B,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MACzD,IAAID,IAAI,EAAE;QACRA,IAAI,CAACE,QAAQ,EAAE;QACfZ,KAAK,CAACL,aAAa,EAAE;QACrBK,KAAK,CAACN,WAAW,IAAIsB,MAAM,CAACN,IAAI,CAACO,KAAK,CAAC;MACzC;IACF,CAAC;IAEDM,iBAAiB,EAAEA,CAACvB,KAAK,EAAEC,MAAM,KAAK;MACpC,MAAMU,EAAE,GAAGV,MAAM,CAACE,OAAO;MACzB,MAAMO,IAAI,GAAGV,KAAK,CAACP,SAAS,CAAC6B,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MACzD,IAAID,IAAI,IAAIA,IAAI,CAACE,QAAQ,GAAG,CAAC,EAAE;QAC7BF,IAAI,CAACE,QAAQ,EAAE;QACfZ,KAAK,CAACL,aAAa,EAAE;QACrBK,KAAK,CAACN,WAAW,IAAIsB,MAAM,CAACN,IAAI,CAACO,KAAK,CAAC;MACzC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAG5B,SAAS,CAAC6B,OAAO;AAE5C,eAAe7B,SAAS,CAAC8B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}